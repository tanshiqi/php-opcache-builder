name: Build PHP OPcache Extension for macOS ARM64

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-opcache:
    runs-on: macos-14  # 使用 macos-14 支持 M 系列芯片 (ARM64)
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        # 安装必要的工具
        brew install autoconf automake libtool pkg-config
        
    - name: Download and extract PHP 7.4 source
      run: |
        # 下载 PHP 7.4 源码
        wget https://www.php.net/distributions/php-7.4.33.tar.gz
        tar -xzf php-7.4.33.tar.gz
        cd php-7.4.33
        
        # 配置编译环境
        ./configure \
          --enable-opcache \
          --enable-opcache-file \
          --prefix=/usr/local/php74 \
          --with-config-file-path=/usr/local/php74/etc \
          --disable-all \
          --enable-json \
          --enable-hash \
          --enable-session \
          --with-zlib \
          --enable-filter \
          --enable-tokenizer \
          --enable-pcre-jit \
          CFLAGS="-arch arm64" \
          CXXFLAGS="-arch arm64" \
          LDFLAGS="-arch arm64"
          
    - name: Build PHP core (required for extensions)
      run: |
        cd php-7.4.33
        make -j$(sysctl -n hw.ncpu)
        
    - name: Build OPcache extension
      run: |
        cd php-7.4.33/ext/opcache
        
        # 生成配置脚本
        phpize74 || /usr/local/php74/bin/phpize || {
          # 如果 phpize 不存在，使用源码目录中的工具
          cd ../../
          ./buildconf --force
          cd ext/opcache
          ../../scripts/phpize
        }
        
        # 配置扩展编译
        ./configure \
          --enable-opcache \
          --enable-opcache-file \
          --with-php-config=/usr/local/php74/bin/php-config \
          CFLAGS="-arch arm64" \
          LDFLAGS="-arch arm64"
          
        # 编译扩展
        make -j$(sysctl -n hw.ncpu)
        
    - name: Verify OPcache extension
      run: |
        cd php-7.4.33/ext/opcache
        
        # 检查编译的扩展文件
        ls -la modules/
        file modules/opcache.so
        
        # 验证架构
        lipo -info modules/opcache.so
        
    - name: Create release directory
      run: |
        mkdir -p release
        cp php-7.4.33/ext/opcache/modules/opcache.so release/
        
        # 创建使用说明
        cat > release/README.md << 'EOF'
        # PHP 7.4 OPcache Extension for macOS ARM64
        
        This OPcache extension was compiled for:
        - PHP 7.4.33
        - macOS ARM64 (M1/M2/M3 series chips)
        
        ## Installation
        
        1. Copy `opcache.so` to your PHP extensions directory
        2. Add the following line to your `php.ini`:
           ```
           extension=opcache.so
           ```
        
        ## Configuration
        
        Add these recommended settings to your `php.ini`:
        ```ini
        [opcache]
        opcache.enable=1
        opcache.enable_cli=1
        opcache.memory_consumption=128
        opcache.interned_strings_buffer=8
        opcache.max_accelerated_files=4000
        opcache.revalidate_freq=2
        opcache.fast_shutdown=1
        ```
        
        ## Verification
        
        Check if OPcache is loaded:
        ```bash
        php -m | grep -i opcache
        ```
        EOF
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: php74-opcache-macos-arm64
        path: release/
        retention-days: 30
        
    - name: Create release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/opcache.so
          release/README.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
