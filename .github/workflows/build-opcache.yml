name: Build PHP OPcache Extension for macOS ARM64

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-opcache:
    runs-on: macos-14  # 使用 macos-14 支持 M 系列芯片 (ARM64)
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        # 安装必要的工具
        brew install autoconf automake libtool pkg-config wget
        
    - name: Install PHP 7.4 from Homebrew (for phpize and php-config)
      run: |
        # 添加PHP tap
        brew tap shivammathur/php
        # 安装PHP 7.4
        brew install shivammathur/php/php@7.4
        # 链接PHP 7.4
        brew link --force --overwrite php@7.4
        
    - name: Download and extract PHP 7.4 source
      run: |
        # 下载 PHP 7.4 源码
        wget https://www.php.net/distributions/php-7.4.33.tar.gz
        tar -xzf php-7.4.33.tar.gz
        
    - name: Build OPcache extension
      run: |
        cd php-7.4.33/ext/opcache
        
        # 使用系统安装的phpize
        /opt/homebrew/bin/phpize
        
        # 配置扩展编译
        ./configure \
          --enable-opcache \
          --enable-opcache-file \
          --with-php-config=/opt/homebrew/bin/php-config \
          CFLAGS="-arch arm64 -O2" \
          CXXFLAGS="-arch arm64 -O2" \
          LDFLAGS="-arch arm64"
          
        # 编译扩展
        make -j$(sysctl -n hw.ncpu)
        
    - name: Verify OPcache extension
      run: |
        cd php-7.4.33/ext/opcache
        
        # 检查编译的扩展文件
        ls -la modules/
        file modules/opcache.so
        
        # 验证架构
        lipo -info modules/opcache.so
        
        # 测试扩展是否可以加载
        php -d extension=./modules/opcache.so -m | grep -i opcache || echo "OPcache extension compiled successfully"
        
    - name: Create release directory
      run: |
        mkdir -p release
        cp php-7.4.33/ext/opcache/modules/opcache.so release/
        
        # 获取PHP版本信息
        PHP_VERSION=$(php --version | head -n1)
        echo "Built with: $PHP_VERSION" > release/build_info.txt
        echo "Architecture: $(uname -m)" >> release/build_info.txt
        echo "Build date: $(date)" >> release/build_info.txt
        
        # 创建使用说明
        cat > release/README.md << 'EOF'
        # PHP 7.4 OPcache Extension for macOS ARM64
        
        This OPcache extension was compiled for:
        - PHP 7.4.x
        - macOS ARM64 (M1/M2/M3 series chips)
        
        ## Installation
        
        1. Find your PHP extensions directory:
           ```bash
           php -i | grep extension_dir
           ```
        
        2. Copy `opcache.so` to your PHP extensions directory:
           ```bash
           sudo cp opcache.so $(php -r "echo ini_get('extension_dir');")
           ```
        
        3. Add the following line to your `php.ini`:
           ```ini
           extension=opcache
           ```
        
        4. Find your php.ini location:
           ```bash
           php --ini
           ```
        
        ## Configuration
        
        Add these recommended OPcache settings to your `php.ini`:
        ```ini
        [opcache]
        opcache.enable=1
        opcache.enable_cli=1
        opcache.memory_consumption=128
        opcache.interned_strings_buffer=8
        opcache.max_accelerated_files=4000
        opcache.revalidate_freq=2
        opcache.fast_shutdown=1
        opcache.validate_timestamps=1
        opcache.revalidate_freq=0
        ```
        
        ## Verification
        
        Check if OPcache is loaded:
        ```bash
        php -m | grep -i opcache
        ```
        
        Check OPcache status:
        ```bash
        php -r "var_dump(opcache_get_status());"
        ```
        
        ## Troubleshooting
        
        If you get "cannot load module" errors, make sure:
        1. The extension file has correct permissions
        2. Your PHP version matches (7.4.x)
        3. The architecture matches (ARM64)
        4. No conflicting OPcache extensions are loaded
        
        ## Build Information
        
        See `build_info.txt` for details about the build environment.
        EOF
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: php74-opcache-macos-arm64
        path: release/
        retention-days: 30
        
    - name: Create release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release/opcache.so
          release/README.md
          release/build_info.txt
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
